"13:43:39, 14 czerwca 2015: Compressed sources"!

"13:43:42, 14 czerwca 2015: Dolphin Smalltalk X6 Community Edition started"!

InstallationSessionManager removeFromSystem!

"13:43:43, 14 czerwca 2015: Image saved"!

Object subclass: #ContractBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ContractBuilder guid: (GUID fromString: '{0198A206-47FA-4D11-9E67-939A143528C7}')!
ContractBuilder comment: ''!
!ContractBuilder categoriesForClass!Unclassified! !
ProtoObject subclass: #Instrument
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Instrument guid: (GUID fromString: '{EE67588F-9932-4A26-84ED-DCFBFB23B286}')!
Instrument comment: ''!
!Instrument categoriesForClass!Unclassified! !
Error subclass: #ContractViolation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
ContractViolation guid: (GUID fromString: '{B8E71392-E924-4A22-B9ED-9FBC0ACC1782}')!
ContractViolation comment: ''!
!ContractViolation categoriesForClass!Unclassified! !
Error subclass: #ContractViolation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"14:38:40, 14 czerwca 2015: Image saved"!

"14:40:25, 14 czerwca 2015: Image saved"!

"19:21:27, 16 czerwca 2015: Dolphin Smalltalk X6 Community Edition started"!

Object subclass: #CBClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
CBClass guid: (GUID fromString: '{AA5CF289-B320-4A84-93E6-5B66093399B4}')!
CBClass comment: ''!
!CBClass categoriesForClass!Unclassified! !
Object subclass: #CBClass
	instanceVariableNames: 'c'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #CBClass
	instanceVariableNames: 'c'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!ContractBuilder methodsFor!
class: cls
	|cbc|
	cbc := CBClass new;
	cbc c: cls;
	cbc.! !
!ContractBuilder categoriesFor: #class:!public! !

!ContractBuilder methodsFor!
class: cls
	|cbc|
	cbc := CBClass new.
	cbc c: cls.
	^ cbc.! !
!ContractBuilder categoriesFor: #class:!public! !

!

!

!

cbc := CBClass new.!

cbc.!

Object subclass: #CBClass
	instanceVariableNames: 'c'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!CBClass methodsFor!
c: cls
	c := cls! !
!CBClass categoriesFor: #c:!public! !

!CBClass methodsFor!
c: cls
	c := cls! !
!CBClass categoriesFor: #c:!public! !

!ClassBuilder methodsFor!
class: cls
	|cbc|
	cbc := CBClass new.
	cbc c: cls.
	^cbc.! !
!ClassBuilder categoriesFor: #class:!public! !

!

cb := ClassBuilder new!

cb class: ClassBuilder!

"21:16:08, 16 czerwca 2015: Image saved"!

"18:05:28, 17 czerwca 2015: Dolphin Smalltalk X6 Community Edition started"!

"20:06:12, 17 czerwca 2015: Dolphin Smalltalk X6 Community Edition started"!
Object subclass: #ClassBuilder
	instanceVariableNames: 'currentClass className instanceVariables superclass instanceSpec classVariables sharedPools comment flags categories cbcDict'
	classVariableNames: 'FixedInitialLayout FixedLayout IgnoreInstsMask RecompileMask Unsubclassable'
	poolDictionaries: '_BehaviorMasks'
	classInstanceVariableNames: ''!

!ClassBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^ (self new)
	cbcDict: (Dictionary new);
	yourself.! !
!ClassBuilder class categoriesFor: #new!instance creation!public! !

!ClassBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^(self superclass) initialize! !
!ClassBuilder class categoriesFor: #new!instance creation!public! !

!ClassBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^(self new) initialize! !
!ClassBuilder class categoriesFor: #new!instance creation!public! !

!ClassBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^(self new) initialize! !
!ClassBuilder class categoriesFor: #new!instance creation!public! !

!ClassBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^(self new) initialize! !
!ClassBuilder class categoriesFor: #new!instance creation!public! !

!ClassBuilder methodsFor!
initialize
	"Private - Initialize the instance."

	instanceSpec := 0.
	self beFixed.
	flags := 0.
	cbcDict := Dictionary new! !
!ClassBuilder categoriesFor: #initialize!initializing!private! !

d := Dictionary new;!

d at: 1!

d at: 1 ifAbsent: [d at: 1 put: 'a']!

d at: 1 ifAbsent: [d at: 1 put: 1]a DevelopmentSessionManager!

d at: 1 ifAbsent: [d at: 1 put: 1]!

d at: 1 ifAbsent: []!

d at: 1 ifAbsent: [];!

d at: 1 ifAbsent: [^d];Dictionary!

d at: 1 ifAbsent: [d];Dictionary!

d at: 1 ifAbsent: [d.]!

d at: 1 ifAbsent: [d;]!

d at: 1 ifAbsent: [:dict | dict at: 1 put: 1]!

d at: 1 ifAbsent: [:dict | dict at: 1 put: 1, dict]a DevelopmentSessionManager!

d at: 1 ifAbsent: ([:dict | dict at: 1 put: 1, dict])a DevelopmentSessionManager!

d at: 1 ifAbsent: [:dict | dict]a DevelopmentSessionManager!

d at: 1 ifAbsent: [:dict | dict]!

d at: 1!

d at: 1 put: 1!

d at: 1 put: 1.!

|d|!

d := Dictionary new;!

d at: 1 put: 1!

a := Dictionary new!

a at: 1 put: 1!

a!

a!

d at: 1 put: 1!

d := Dictionary new;Dictionary
d at: 1 put: 1!

d := Dictionary new;!

d at: 1 put: 1!

d := Dictionary new!

d at: 1 put: 1!

d at: 1 ifAbsent: [d at: 1 put: 1]!

d at: 1!

d := Dictionary new!

d at: 1 ifAbsent: [d at: 1 put: 1]!

d at: 2!

d at: 2 ifAbsent: [d at: 2 put: 2]!

!ClassBuilder methodsFor!
class: cls
	cbcDict at: cls ifAbsent: [cbcDict at: cls put: (CBClass new)]! !
!ClassBuilder categoriesFor: #class:!public! !

!ClassBuilder methodsFor!
class: cls
	cbcDict at: cls ifAbsent: [cbcDict at: cls put: ((CBClass new) c: cls)]! !
!ClassBuilder categoriesFor: #class:!public! !

cb := ClassBuilder new!

cb := ClassBuilder new!

!ClassBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^(superclass new) initialize! !
!ClassBuilder class categoriesFor: #new!instance creation!public! !

!ClassBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^(superclass new) initialize! !
!ClassBuilder class categoriesFor: #new!instance creation!public! !

cb := ClassBuilder new!

cb class: ClassBuilder!

!ClassBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^super new initialize! !
!ClassBuilder class categoriesFor: #new!instance creation!public! !

cb := ClassBuilder new!

cb class: ClassBuilder!

"20:54:38, 17 czerwca 2015: Image saved"!

"09:25:53, 18 czerwca 2015: Dolphin Smalltalk X6 Community Edition started"!
Object subclass: #ClassBuilder
	instanceVariableNames: 'currentClass className instanceVariables superclass instanceSpec classVariables sharedPools comment flags categories'
	classVariableNames: 'FixedInitialLayout FixedLayout IgnoreInstsMask RecompileMask Unsubclassable'
	poolDictionaries: '_BehaviorMasks'
	classInstanceVariableNames: ''!

Object subclass: #ContractBuilder
	instanceVariableNames: 'cbcDict'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #ContractBuilder
	instanceVariableNames: 'cbcDict'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #ContractBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #ContractBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"21:14:40, 18 czerwca 2015: Dolphin Smalltalk X6 Community Edition started"!

Object subclass: #ContractBuilder
	instanceVariableNames: 'cbcDict'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!ContractBuilder methodsFor!
class: cls
	cbcDict at: cls ifAbsent: [cbcDict at: cls put: ((CBClass new) c: cls)]! !
!ContractBuilder categoriesFor: #class:!public! !

!ContractBuilder methodsFor!
initialize
	cbcDict := Dictionary new! !
!ContractBuilder categoriesFor: #initialize!public! !

!ContractBuilder class methodsFor!
new
	"Answer a new initialized instance."
	^super new initialize! !
!ContractBuilder class categoriesFor: #new!public! !

cb := ContractBuilder new!

cb class: Context!

!ContractBuilder methodsFor!
class: cls
	^(cbcDict at: cls ifAbsent: [cbcDict at: cls put: ((CBClass new) c: cls)])! !
!ContractBuilder categoriesFor: #class:!public! !

cb class: Context!

!ClassBuilder methodsFor!
class: aClass
	"Private - Set the currentClass inst var to the class to be modified, aClass."

	currentClass := aClass.
	self instanceSpec: aClass instanceSpec.! !
!ClassBuilder categoriesFor: #class:!public! !

!ClassBuilder methodsFor!
initialize
	"Private - Initialize the instance."

	instanceSpec := 0.
	self beFixed.
	flags := 0.! !
!ClassBuilder categoriesFor: #initialize!initializing!private! !

Object subclass: #ClassBuilder
	instanceVariableNames: 'currentClass className instanceVariables superclass instanceSpec classVariables sharedPools comment flags categories'
	classVariableNames: 'FixedInitialLayout FixedLayout IgnoreInstsMask RecompileMask Unsubclassable'
	poolDictionaries: '_BehaviorMasks'
	classInstanceVariableNames: ''!

cb := ClassBuilder new!

cb := ContractBuilder new!

"21:22:04, 18 czerwca 2015: Image saved"!

